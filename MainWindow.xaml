<Window x:Class="GraphVirtualizationTool.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:GraphVirtualizationTool"
    Title="Graph Virtualization Tool" Height="768" Width="1024" x:Name="view">
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="100"/>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <!-- This CompositeCollection basically Concatenates the Nodes and Connectors in a single one -->
            <CompositeCollection x:Key="Col">
                <CollectionContainer Collection="{Binding DataContext.Edges,Source={x:Reference view}}"/>
                <CollectionContainer Collection="{Binding DataContext.Nodes,Source={x:Reference view}}"/>
            </CompositeCollection>

            <!-- This is the DataTemplate that will be used to render the Node class -->
            <DataTemplate DataType="{x:Type local:Node}">
                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas>
                                <Ellipse Height="{Binding NodeSize}" Width="{Binding NodeSize}" Stroke="Black" StrokeThickness="1" Fill="{Binding NodeColor}"
                                             x:Name="Ellipse">
                                </Ellipse>
                                <TextBlock Canvas.Top="5" Canvas.Left="-10" Width="100" 
                                               TextAlignment="Center" Text="{Binding Name}"
                                               Visibility="{Binding DataContext.ShowNames, 
                                               RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                                               Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="Yellow"/>
                                </DataTrigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="Ellipse" Property="Fill" Value="Green"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                    <Setter TargetName="Ellipse" Property="StrokeThickness" Value="2"/>
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="Red"/>
                                    <Setter TargetName="Ellipse" Property="Fill" Value="White"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
                                        <Condition Binding="{Binding DataContext.ShowCurrentCoordinates, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DataTemplate>

            <!-- This is the DataTemplate that will be used to render the Connector class -->
            <DataTemplate DataType="{x:Type local:Edge}">
                <Line Stroke="Black" StrokeThickness="1"
                            X1="{Binding Start.CenterX}" Y1="{Binding Start.CenterY}"
                            X2="{Binding End.CenterX}" Y2="{Binding End.CenterY}" x:Name="Line"/>
                <DataTemplate.Triggers>
                    <!--<DataTrigger Binding="{Binding End}" Value="{x:Null}">
                        <Setter TargetName="Line" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>-->
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                        <Setter TargetName="Line" Property="Stroke" Value="Red"/>
                        <Setter TargetName="Line" Property="StrokeDashArray" Value="2 3"/>
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="DashAnimation">
                                <Storyboard Duration="00:00:01" RepeatBehavior="Forever">
                                    <DoubleAnimation From="0" To="20" Storyboard.TargetName="Line" Storyboard.TargetProperty="StrokeDashOffset"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <StopStoryboard BeginStoryboardName="DashAnimation"/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Grid.Resources>
        
        <!-- Here comes the components -->
        <local:GraphController VerticalAlignment="Center" Margin="10" Grid.Column="0"/>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
        <ListBox x:Name="canvas_holder" Grid.Column="2" SelectedItem="{Binding SelectedObject}"
                     PreviewMouseMove="ListBox_PreviewMouseMove"
                     PreviewMouseDown="ListBox_PreviewMouseDown">
            <ListBox.Template>
                <ControlTemplate>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemsSource>
                <StaticResource ResourceKey="Col"/>
            </ListBox.ItemsSource>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate x:Name="canvas" >
                    <Canvas Loaded="Canvas_Loaded" IsItemsHost="True" Background="Beige" Height="{Binding CanvasHeight}" Width="{Binding CanvasWidth}"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Canvas.Left" Value="{Binding X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter x:Name="Content"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Content" Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="25"/>
                                                <!--controls the node's shadow-->
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <!--<DataTrigger Binding="{Binding IsNew}" Value="True">
                                        <Setter Property="Opacity" Value=".5"/>
                                    </DataTrigger>-->
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </Grid>
</Window>

    